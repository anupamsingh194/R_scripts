##mb_ret_113_flowering_gradient contains gradient to flowering, high-late flowering, low- early flowering, medium=intermediate time to flowering

library(gdsfmt)
library(SNPRelate)
flowering_degree<-read.table("mb_ret_113_flowering_gradient", header=T, sep="\t")
pdf("pca_color_plot_flower_gradient.pdf", width = 28, height = 18)
par(mfrow = c(2, 3))
my_vcf_files<-list.files(pattern="*.vcf.recode.vcf")
for (i in my_vcf_files){
vcf.fn<-i
snpgdsVCF2GDS(vcf.fn, paste0(i,"ccm.gds"),  method="biallelic.only")
snpgdsSummary(paste0(i,"ccm.gds"))
genofile <- snpgdsOpen(paste0(i,"ccm.gds"))
ccm_pca_i<-snpgdsPCA(genofile,autosome.only=FALSE)
tab <- data.frame(sample.id = ccm_pca_i$sample.id,PC1 =ccm_pca_i$eigenvect[,1],PC2 = ccm_pca_i$eigenvect[,2])
tab_new<-merge(tab,flowering_degree, by.x="sample.id", by.y="Varma.code")
tab_new$flowering_degree<-as.factor(tab_new$flowering_degree)
unique.flowering_degree<-unique(tab_new$flowering_degree)
plot(tab_new$PC1, tab_new$PC2, main =i, col=tab_new$flowering_degree ,pch=19, cex.lab=1.5, cex.main=2,cex=2)
legend("bottom", xpd = TRUE, as.character(unique.flowering_degree),col=unique.flowering_degree,pch=19, bty = "n", cex = 1.5,horiz=TRUE)
}
dev.off()
unlink("*vcfccm.gds", recursive = FALSE, force = FALSE)

